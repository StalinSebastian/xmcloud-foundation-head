services:
  # A Windows-based nodejs base image
  nodejs:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    build:
      context: ./docker/build/nodejs
      args:
        PARENT_IMAGE: ${NODEJS_PARENT_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
    deploy:
      replicas: 0

  rendering-nextjs:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-rendering-nextjs:${VERSION:-latest}
    build:
      context: ./docker/build/rendering-nextjs
      target: ${BUILD_CONFIGURATION}
      args:
        PARENT_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    volumes:
      - ../headapps/nextjs-starter:C:\app
    environment:
      SITECORE_API_HOST: "http://cm"
      NEXTJS_DIST_DIR: ".next-container"
      PUBLIC_URL: "https://${RENDERING_HOST_NEXTJS}"
      JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_API_KEY: "${SITECORE_API_KEY_APP_STARTER}"
      DISABLE_SSG_FETCH: ${DISABLE_SSG_FETCH}
      SITECORE_MEDIA_URL: "https://${CM_HOST}/"
      SITECORE_GRAPHQL_ENDPOINT: "https://${CM_HOST}/sitecore/api/graph/edge"
    depends_on:
      - cm
      - nodejs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure-nextjs.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure-nextjs.rule=Host(`${RENDERING_HOST_NEXTJS}`)"
      - "traefik.http.routers.rendering-secure-nextjs.tls=true"
    deploy:
      resources:
        limits:
          memory: 3G

  rendering-angularjs:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-rendering-angularjs:${VERSION:-latest}
    build:
      context: ./docker/build/rendering-nextjs
      target: ${BUILD_CONFIGURATION}
      args:
        PARENT_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    ports:
      - "3001:3000"
    volumes:
      - ../headapps/spa-starters/angular:C:\app
    environment:
      SITECORE_API_HOST: "http://cm"
      PUBLIC_URL: "https://${RENDERING_HOST_AngularJS}"
      JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_API_KEY: "${SITECORE_API_KEY_APP_STARTER}"
      DISABLE_SSG_FETCH: ${DISABLE_SSG_FETCH}
      SITECORE_MEDIA_URL: "https://${CM_HOST}/"
      SITECORE_GRAPHQL_ENDPOINT: "https://${CM_HOST}/sitecore/api/graph/edge"
    depends_on:
      - cm
      - nodejs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure-angularjs.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure-angularjs.rule=Host(`${RENDERING_HOST_AngularJS}`)"
      - "traefik.http.routers.rendering-secure-angularjs.tls=true"
    deploy:
      resources:
        limits:
          memory: 3G

  rendering-playsummit:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-rendering-nextjs:${VERSION:-latest}
    build:
      context: ./docker/build/rendering-nextjs
      target: ${BUILD_CONFIGURATION}
      args:
        PARENT_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    ports:
      - "3002:3000"
    volumes:
      - ../headapps/play-summit:C:\app
    environment:
      SITECORE_API_HOST: "http://cm"
      NEXTJS_DIST_DIR: ".next-container"
      PUBLIC_URL: "https://${RENDERING_HOST_PlaySummit}"
      JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_API_KEY: "${SITECORE_API_KEY_APP_STARTER}"
      DISABLE_SSG_FETCH: ${DISABLE_SSG_FETCH}
      SITECORE_MEDIA_URL: "https://${CM_HOST}/"
      SITECORE_GRAPHQL_ENDPOINT: "https://${CM_HOST}/sitecore/api/graph/edge"
      NEXT_PUBLIC_MEDIA_BASE_URL: "https://${CM_HOST}"
    depends_on:
      - cm
      - nodejs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure-playsummit.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure-playsummit.rule=Host(`${RENDERING_HOST_PlaySummit}`)"
      - "traefik.http.routers.rendering-secure-playsummit.tls=true"
    deploy:
      resources:
        limits:
          memory: 3G

  rendering-aspnetcore:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-rendering-aspnetcore:${VERSION:-latest}
    build:
      context: ./docker/build/rendering-aspnetcore
      args:
        BASE_IMAGE: ${NETCORE_BUILD_IMAGE}-${EXTERNAL_IMAGE_TAG_SUFFIX}
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
      DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: true
      MVP_RENDERING_EDITING_HOST_URI: "http://rendering-aspnetcore"
      Sitecore__EnableEditingMode: "true"
      Sitecore__EnableLocalContainer: "true"
      Sitecore__LocalContainerLayoutUri: "http://cm/sitecore/api/graph/edge"
      Sitecore__EdgeContextId: ${SITECORE_API_KEY_APP_STARTER}
      Sitecore__EditingSecret: ${EDITING_SECRET}
      Sitecore__DefaultSiteName: ${SITE_NAME}
    ports:
      - "80:80"
    command: ["dotnet", "watch", "run", -v, "--urls", "http://*:80"]
    volumes:
      - ..\headapps\aspnet-starter:c:\app
      - c:\app\obj
      - c:\app\bin
    depends_on:
      - cm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aspnet-core-starter-secure.entrypoints=websecure"
      - "traefik.http.routers.aspnet-core-starter-secure.rule=Host(`${RENDERING_HOST_AspnetCore}`)"
      - "traefik.http.routers.aspnet-core-starter-secure.tls=true"

  # Mount the Traefik configuration and certs.
  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
    depends_on:
      - rendering-nextjs

  # Mount our SQL data folder and use our custom image with the Headless Services (JSS)
  # module data added. See Dockerfile for details.
  mssql:
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data

  # Mount our Solr data folder and use our retagged Solr image.
  # Some modules (like SXA) also require additions to the Solr image.
  solr:
    volumes:
      - type: bind
        source: .\docker\data\solr
        target: c:\data

  # Use our custom CM image with added modules and solution code.
  # Folders are mounted below for code deployment and log output. See Dockerfile for details.
  # Configure for a mounted license file instead of using SITECORE_LICENSE.
  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xmcloud-cm:${VERSION:-latest}
    build:
      context: ./docker/build/cm
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xmcloud-cm:${SITECORE_VERSION}
        TOOLS_IMAGE: ${TOOLS_IMAGE}:${SITECORE_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\platform:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    mem_limit: 8GB
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      RENDERING_HOST_INTERNAL_URI: "http://rendering-nextjs:3000"
      SITECORE_JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_EDITING_HOST_PUBLIC_HOST: "${RENDERING_HOST_NEXTJS}"
      SITECORE_GraphQL_CORS: ${SITECORE_GRAPHQL_CORS}
      SITECORE_Pages_Client_Host: ${SITECORE_Pages_Client_Host}
      SITECORE_Pages_CORS_Allowed_Origins: ${SITECORE_Pages_CORS_Allowed_Origins}
      ## Development Environment Optimizations
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff
      Sitecore_AppSettings_exmEnabled:define: "no" # remove to turn on EXM
      EXPERIENCE_EDGE_ENABLED: "false"
      SITECORE_SPE_ELEVATION: "Allow"
      XmCloud_PublishingApi_Enabled: "false"
      Sitecore_GraphQL_ExposePlayground: "true"
    entrypoint: powershell -Command "& C:/tools/entrypoints/iis/XmCloudDevelopment.ps1"
    extra_hosts:
      - "cm:127.0.0.1"
      - "xmcloudcm.localhost:127.0.0.1"
    labels:
      - "traefik.http.routers.cm.rule=Host(`cm`)"
      - "traefik.http.routers.cm.middlewares=cm-to-xmcloudcm"
      - "traefik.http.middlewares.cm-to-xmcloudcm.redirectregex.regex=^https?://cm(.*)"
      - "traefik.http.middlewares.cm-to-xmcloudcm.redirectregex.replacement=https://xmcloudcm.localhost$${1}"
